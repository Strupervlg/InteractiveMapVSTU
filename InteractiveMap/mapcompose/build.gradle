plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
}

android {
    compileSdk 31

    defaultConfig {
        minSdkVersion 24
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
}

dependencies {
    def coroutine_version = '1.5.2'

    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.compose.ui:ui-unit:$compose_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.source
}

ext.'signing.keyId' = System.getenv('signingKeyId')
ext.'signing.password' = System.getenv('signingPwd')
ext.'signing.secretKeyRingFile' = System.getenv('signingKeyFile')

afterEvaluate { project ->
    publishing {
        publications {
            release(MavenPublication) {

                groupId = GROUP
                artifactId = ARTIFACT_ID
                version = VERSION_NAME  // see gradle.properties

                artifact bundleReleaseAar
                artifact androidSourcesJar

                pom {
                    name = POM_NAME
                    packaging = POM_PACKAGING
                    description = POM_DESCRIPTION
                    url = POM_URL

                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                            distribution = POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                            url = POM_DEVELOPER_URL
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                def releasesRepoUrl = System.getenv('releaseRepositoryUrl')
                def snapshotsRepoUrl = System.getenv('snapshotRepositoryUrl')
                url = !VERSION_NAME.contains("SNAPSHOT") ? releasesRepoUrl : snapshotsRepoUrl

                credentials(PasswordCredentials) {
                    username = System.getenv('NEXUS_USERNAME')
                    password = System.getenv('NEXUS_PASSWORD')
                }
            }
        }
    }

    signing {
        publishing.publications.all { publication ->
            sign publication
        }
    }
}